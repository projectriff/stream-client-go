name: CI

on:
  push:
    branches:
    - '**'
    - '!dependabot/**'
  pull_request: {}

env:
  FATS_DIR: fats
  FATS_REPO: projectriff/fats
  FATS_REFSPEC: fa0d71d66ad163346f3ad20d7ab55784d6a11b20 # master as of 2020-01-30

jobs:

  unit:
    name: Unit test
    strategy:
      matrix:
        os:
        - ubuntu-latest
        - macos-latest
        - windows-latest
      fail-fast: false
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v1
    - uses: actions/setup-go@v1
      with:
        go-version: '1.13'
    # TODO remove after https://github.com/actions/setup-go/issues/14
    - name: Add GOPATH/bin to PATH
      run: |
        echo "##[set-env name=GOPATH;]$(go env GOPATH)"
        echo "##[add-path]$(go env GOPATH)/bin"
      shell: bash
    - name: Build
      run: make

  integration:
    name: Integration testing
    needs: unit
    runs-on: ubuntu-latest
    strategy:
      matrix:
        gateway:
        - inmemory
        - kafka
        - pulsar
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-go@v1
        with:
          go-version: '1.13'
      - name: 'Fetch FATS'
        run: .github/workflows/fats-fetch.sh ${FATS_DIR} ${FATS_REFSPEC} ${FATS_REPO}
        timeout-minutes: 1
      - name: 'Install tools'
        run: |
          ${FATS_DIR}/install.sh kubectl
          ${FATS_DIR}/install.sh kind
          ${FATS_DIR}/install.sh riff
          ${FATS_DIR}/install.sh kapp
        timeout-minutes: 5
      - name: 'setup env'
        run: |
          job=$(date +%s) # TODO can use something that is assigned by CI to guarantee uniqueness
          echo "JOB_ID=${job}"
          echo "##[set-env name=CLUSTER]kind"
          echo "##[set-env name=REGISTRY]docker-daemon"
          echo "##[set-env name=CLUSTER_NAME]fats-${job}-kind"
          echo "##[set-env name=NAMESPACE]stream-client-${job}-kind"
          echo "##[set-env name=GATEWAY]${{ matrix.gateway }}"
      - name: Setup cluster
        run: .github/workflows/setup-cluster.sh
      - name: 'run integration test'
        run: go test ./...
      - name: Collect diagnostics
        run: ${FATS_DIR}/diagnostics.sh
        shell: bash
        if: always()
        timeout-minutes: 1
      - name: Cleanup cluster
        run: .github/workflows/cleanup-cluster.sh
        shell: bash
        if: always()
        timeout-minutes: 10
